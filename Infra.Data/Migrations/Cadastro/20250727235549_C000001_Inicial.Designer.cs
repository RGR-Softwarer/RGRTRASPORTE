// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infra.Data.Migrations.Cadastro
{
    [DbContext(typeof(CadastroContext))]
    [Migration("20250727235549_C000001_Inicial")]
    partial class C000001_Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Entidades.Auditoria.RegistroAuditoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("RAU_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Acao")
                        .HasColumnType("integer")
                        .HasColumnName("RAU_ACAO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RAU_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("RAU_CREATED_BY");

                    b.Property<string>("Dados")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("RAU_DADOS");

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RAU_DATA_OCORRENCIA");

                    b.Property<long>("EntidadeId")
                        .HasColumnType("bigint")
                        .HasColumnName("RAU_ENTIDADE_ID");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("RAU_IP");

                    b.Property<string>("NomeEntidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("RAU_NOME_ENTIDADE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RAU_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("RAU_UPDATED_BY");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("RAU_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("T_REGISTRO_AUDITORIA", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Localidades.Localidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("LOC_ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LOC_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LOC_CREATED_BY");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric")
                        .HasColumnName("LOC_LATITUDE");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric")
                        .HasColumnName("LOC_LONGITUDE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LOC_NOME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LOC_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LOC_UPDATED_BY");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("T_LOCALIDADE", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Pessoas.Motorista", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MOT_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CNH")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_CNH");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_CPF");

                    b.Property<int>("CategoriaCNH")
                        .HasColumnType("integer")
                        .HasColumnName("MOT_CATEGORIA_CNH");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("MOT_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_CREATED_BY");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_EMAIL");

                    b.Property<long>("LocalidadeId")
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_NOME");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_OBSERVACAO");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_RG");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer")
                        .HasColumnName("MOT_SEXO");

                    b.Property<bool>("Situacao")
                        .HasColumnType("boolean")
                        .HasColumnName("MOT_SITUACAO");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_TELEFONE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("MOT_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOT_UPDATED_BY");

                    b.Property<DateTime>("ValidadeCNH")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("MOT_VALIDADE_CNH");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("T_MOTORISTA", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Pessoas.Passageiros.Passageiro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PAS_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PAS_CPF");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PAS_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PAS_CREATED_BY");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PAS_EMAIL");

                    b.Property<long?>("LocalidadeDesembarqueId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_DESEMBARQUE_ID");

                    b.Property<long?>("LocalidadeEmbarqueId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_EMBARQUE_ID");

                    b.Property<long>("LocalidadeId")
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PAS_NOME");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PAS_OBSERVACAO");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer")
                        .HasColumnName("PAS_SEXO");

                    b.Property<bool>("Situacao")
                        .HasColumnType("boolean")
                        .HasColumnName("PAS_SITUACAO");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PAS_TELEFONE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PAS_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PAS_UPDATED_BY");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LocalidadeDesembarqueId");

                    b.HasIndex("LocalidadeEmbarqueId");

                    b.HasIndex("LocalidadeId");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("T_PASSAGEIRO", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Pessoas.Passageiros.Passageiro", b =>
                {
                    b.HasOne("Dominio.Entidades.Localidades.Localidade", "LocalidadeDesembarque")
                        .WithMany()
                        .HasForeignKey("LocalidadeDesembarqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Localidades.Localidade", "LocalidadeEmbarque")
                        .WithMany()
                        .HasForeignKey("LocalidadeEmbarqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Localidades.Localidade", "Localidade")
                        .WithMany()
                        .HasForeignKey("LocalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidade");

                    b.Navigation("LocalidadeDesembarque");

                    b.Navigation("LocalidadeEmbarque");
                });
#pragma warning restore 612, 618
        }
    }
}
