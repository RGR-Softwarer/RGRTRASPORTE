// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infra.Data.Migrations.Transportador
{
    [DbContext(typeof(TransportadorContext))]
    [Migration("20250727235614_T000001_Inicial")]
    partial class T000001_Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Entidades.Veiculos.ModeloVeicular", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MOV_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("integer")
                        .HasColumnName("MOV_CAPACIDADE_MAXIMA");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("MOV_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOV_CREATED_BY");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOV_DESCRICAO_MODELO");

                    b.Property<int>("PassageirosEmPe")
                        .HasColumnType("integer")
                        .HasColumnName("MOV_PASSAGEIROS_EM_PE");

                    b.Property<bool>("PossuiBanheiro")
                        .HasColumnType("boolean")
                        .HasColumnName("MOV_POSSUI_BANHEIRO");

                    b.Property<bool>("PossuiClimatizador")
                        .HasColumnType("boolean")
                        .HasColumnName("MOV_POSSUI_CLIMATIZADOR");

                    b.Property<int>("QuantidadeAssento")
                        .HasColumnType("integer")
                        .HasColumnName("MOV_QUANTIDADE_ASSENTO");

                    b.Property<int>("QuantidadeEixo")
                        .HasColumnType("integer")
                        .HasColumnName("MOV_QUANTIDADE_EIXO");

                    b.Property<bool>("Situacao")
                        .HasColumnType("boolean")
                        .HasColumnName("MOV_SITUACAO");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("MOV_TIPO");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("MOV_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MOV_UPDATED_BY");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("T_MODELO_VEICULAR", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Veiculos.Veiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VEI_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("integer")
                        .HasColumnName("VEI_ANO_FABRICACAO");

                    b.Property<int>("AnoModelo")
                        .HasColumnType("integer")
                        .HasColumnName("VEI_ANO_MODELO");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_COR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VEI_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_CREATED_BY");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_MARCA");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_MODELO");

                    b.Property<long?>("ModeloVeiculoId")
                        .HasColumnType("bigint")
                        .HasColumnName("MOV_ID");

                    b.Property<string>("NumeroChassi")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_NUMERO_CHASSI");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_OBSERVACAO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_PLACA");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_RENAVAM");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("VEI_SITUACAO");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("VEI_STATUS");

                    b.Property<int>("TipoCombustivel")
                        .HasColumnType("integer")
                        .HasColumnName("VEI_TIPO_COMBUSTIVEL");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VEI_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VEI_UPDATED_BY");

                    b.Property<DateTime?>("VencimentoLicenciamento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VEI_VENCIMENTO_LICENCIAMENTO");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModeloVeiculoId");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("T_VEICULO", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.Gatilho.GatilhoViagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("GAV_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("GAV_ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("GAV_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("GAV_CREATED_BY");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("GAV_DESCRICAO");

                    b.Property<string>("DescricaoViagem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("GAV_DESCRICAO_VIAGEM");

                    b.Property<string>("DiasSemana")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("GAV_DIAS_SEMANA");

                    b.Property<decimal>("Distancia")
                        .HasColumnType("numeric")
                        .HasColumnName("GAV_DISTANCIA");

                    b.Property<TimeSpan>("HorarioChegada")
                        .HasColumnType("interval")
                        .HasColumnName("GAV_HORARIO_CHEGADA");

                    b.Property<TimeSpan>("HorarioSaida")
                        .HasColumnType("interval")
                        .HasColumnName("GAV_HORARIO_SAIDA");

                    b.Property<long>("LocalidadeDestinoId")
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_DESTINO_ID");

                    b.Property<long>("LocalidadeOrigemId")
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_ORIGEM_ID");

                    b.Property<long>("MotoristaId")
                        .HasColumnType("bigint")
                        .HasColumnName("MOT_ID");

                    b.Property<string>("PolilinhaRota")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("GAV_POLILINHA_ROTA");

                    b.Property<int>("QuantidadeVagas")
                        .HasColumnType("integer")
                        .HasColumnName("GAV_QUANTIDADE_VAGAS");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("GAV_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("GAV_UPDATED_BY");

                    b.Property<decimal>("ValorPassagem")
                        .HasColumnType("numeric")
                        .HasColumnName("GAV_VALOR_PASSAGEM");

                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint")
                        .HasColumnName("VEI_ID");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("VeiculoId");

                    b.ToTable("T_GATILHO_VIAGEM", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.Viagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VIA_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("VIA_ATIVO");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VIA_CODIGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIA_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VIA_CREATED_BY");

                    b.Property<DateTime?>("DataFimViagem")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIA_DATA_FIM");

                    b.Property<DateTime?>("DataInicioViagem")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIA_DATA_INICIO");

                    b.Property<DateTime>("DataViagem")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIA_DATA");

                    b.Property<string>("DescricaoViagem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VIA_DESCRICAO");

                    b.Property<decimal>("Distancia")
                        .HasColumnType("numeric")
                        .HasColumnName("VIA_DISTANCIA");

                    b.Property<long?>("GatilhoViagemId")
                        .HasColumnType("bigint")
                        .HasColumnName("GAV_ID");

                    b.Property<TimeSpan>("HorarioChegada")
                        .HasColumnType("interval")
                        .HasColumnName("VIA_HORA_CHEGADA");

                    b.Property<TimeSpan>("HorarioSaida")
                        .HasColumnType("interval")
                        .HasColumnName("VIA_HORA_SAIDA");

                    b.Property<long>("LocalidadeDestinoId")
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_DESTINO_ID");

                    b.Property<long>("LocalidadeOrigemId")
                        .HasColumnType("bigint")
                        .HasColumnName("LOC_ORIGEM_ID");

                    b.Property<bool>("Lotado")
                        .HasColumnType("boolean")
                        .HasColumnName("VIA_LOTADO");

                    b.Property<long>("MotoristaId")
                        .HasColumnType("bigint")
                        .HasColumnName("MOT_ID");

                    b.Property<string>("PolilinhaRota")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VIA_POLILINHA_ROTA");

                    b.Property<int>("QuantidadeVagas")
                        .HasColumnType("integer")
                        .HasColumnName("VIA_QUANTIDADE_VAGAS");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("VIA_SITUACAO");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIA_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VIA_UPDATED_BY");

                    b.Property<int>("VagasDisponiveis")
                        .HasColumnType("integer")
                        .HasColumnName("VIA_VAGAS_DISPONIVEIS");

                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint")
                        .HasColumnName("VEI_ID");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GatilhoViagemId");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("VeiculoId");

                    b.ToTable("T_VIAGEM", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.ViagemPassageiro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VIP_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Confirmado")
                        .HasColumnType("boolean")
                        .HasColumnName("VIP_CONFIRMADO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIP_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VIP_CREATED_BY");

                    b.Property<DateTime?>("DataConfirmacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIP_DATA_CONFIRMACAO");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIP_DATA_RESERVA");

                    b.Property<string>("Observacao")
                        .HasColumnType("text")
                        .HasColumnName("VIP_OBSERVACAO");

                    b.Property<long>("PassageiroId")
                        .HasColumnType("bigint")
                        .HasColumnName("PAS_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VIP_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VIP_UPDATED_BY");

                    b.Property<long>("ViagemId")
                        .HasColumnType("bigint")
                        .HasColumnName("VIA_ID");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("ViagemId");

                    b.ToTable("T_VIAGEM_PASSAGEIRO", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.ViagemPosicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VPO_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VPO_CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VPO_CREATED_BY");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VPO_DATA_HORA");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VPO_UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VPO_UPDATED_BY");

                    b.Property<long>("ViagemId")
                        .HasColumnType("bigint")
                        .HasColumnName("VIA_ID");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("ViagemId");

                    b.ToTable("T_VIAGEM_POSICAO", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Veiculos.Veiculo", b =>
                {
                    b.HasOne("Dominio.Entidades.Veiculos.ModeloVeicular", "ModeloVeiculo")
                        .WithMany("Veiculos")
                        .HasForeignKey("ModeloVeiculoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ModeloVeiculo");
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.Gatilho.GatilhoViagem", b =>
                {
                    b.HasOne("Dominio.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.Viagem", b =>
                {
                    b.HasOne("Dominio.Entidades.Viagens.Gatilho.GatilhoViagem", "GatilhoViagem")
                        .WithMany("Viagens")
                        .HasForeignKey("GatilhoViagemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dominio.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GatilhoViagem");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.ViagemPassageiro", b =>
                {
                    b.HasOne("Dominio.Entidades.Viagens.Viagem", "Viagem")
                        .WithMany("Passageiros")
                        .HasForeignKey("ViagemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Viagem");
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.ViagemPosicao", b =>
                {
                    b.HasOne("Dominio.Entidades.Viagens.Viagem", "Viagem")
                        .WithMany("Posicoes")
                        .HasForeignKey("ViagemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Dominio.ValueObjects.Coordenada", "Coordenada", b1 =>
                        {
                            b1.Property<long>("ViagemPosicaoId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric")
                                .HasColumnName("VPO_LATITUDE");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric")
                                .HasColumnName("VPO_LONGITUDE");

                            b1.HasKey("ViagemPosicaoId");

                            b1.ToTable("T_VIAGEM_POSICAO");

                            b1.WithOwner()
                                .HasForeignKey("ViagemPosicaoId");
                        });

                    b.Navigation("Coordenada")
                        .IsRequired();

                    b.Navigation("Viagem");
                });

            modelBuilder.Entity("Dominio.Entidades.Veiculos.ModeloVeicular", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.Gatilho.GatilhoViagem", b =>
                {
                    b.Navigation("Viagens");
                });

            modelBuilder.Entity("Dominio.Entidades.Viagens.Viagem", b =>
                {
                    b.Navigation("Passageiros");

                    b.Navigation("Posicoes");
                });
#pragma warning restore 612, 618
        }
    }
}
